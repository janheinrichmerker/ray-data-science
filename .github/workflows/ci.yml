name: CI

on:
  push:

jobs:
  docker-build:
    name: 🏗️ Build Docker image
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        backend:
          - default
          - cpu
          - gpu
    steps:
    - name: 💾 Maximize build space
      uses: easimon/maximize-build-space@v10
      with:
        root-reserve-mb: 512
        temp-reserve-mb: 32
        swap-size-mb: 32
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        build-mount-path: /var/lib/docker/
    - name: 🔃 Restart Docker
      run: sudo service docker restart
    - name: 📥 Check-out
      uses: actions/checkout@v4
    - name: 🧰 Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: 🧰 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: 🏗️ Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        target: ${{ matrix.backend != 'default' && matrix.backend || '' }}
        push: false
  docker-publish:
    name: 🚀 Publish Docker image
    if: github.event_name == 'push' && endsWith(github.event.base_ref, 'main') && startsWith(github.ref, 'refs/tags')
    permissions:
      packages: write
    needs:
    - docker-build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        backend:
          - default
          - cpu
          - gpu
    steps:
    - name: 💾 Maximize build space
      uses: easimon/maximize-build-space@v10
      with:
        root-reserve-mb: 512
        temp-reserve-mb: 32
        swap-size-mb: 32
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        build-mount-path: /var/lib/docker/
    - name: 🔃 Restart Docker
      run: sudo service docker restart
    - name: 📥 Check-out
      uses: actions/checkout@v4
    - name: 🧰 Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: 🧰 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: 🔑 Login to GitHub Packages
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: ℹ️ Extract image metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        flavor: |
          suffix=${{ matrix.backend }}
          ${{ matrix.backend != 'default' && format('suffix=-{0}', matrix.backend) || 'suffix=' }}
    - name: 🚀 Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        target: ${{ matrix.backend != 'default' && matrix.backend || '' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
  github-release:
    name: 🚀 Create GitHub release
    if: github.event_name == 'push' && endsWith(github.event.base_ref, 'main') && startsWith(github.ref, 'refs/tags')
    needs:
    - docker-publish
    - docker-build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: 📥 Check-out
      uses: actions/checkout@v4
    - name: 🚀 Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
